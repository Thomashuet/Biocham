% BIOCHAM system http://contraintes.inria.fr/BIOCHAM/
% Copyright 2003-2006, INRIA, Projet Contraintes
%
% This program is free software; you can redistribute it and/or
% modify it under the terms of the GNU General Public License
% as published by the Free Software Foundation; either version 2
% of the License, or (at your option) any later version.
% 
% This program is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.
% 
% You should have received a copy of the GNU General Public License
% along with this program; if not, write to the Free Software
% Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
%
% GNU prolog file lazylist.pl
% by Daniel de Rauglaudre

% This file has been generated by program: do not edit!
llist_hd_tl(LL1, H, LL2) :-
	(LL1 = [H|LL2] -> true; LL1 = gen(Next, Id, I, X), LL2 = gen(Next, Id, NI, NX), P =.. [Id, I], NI is I + 1, g_read(P, V), (V = val(H1, NX) -> H = H1; V = end -> fail; call_pred4(Next, I, H1, X, NX) -> g_assign(P, val(H1, NX)), H = H1; g_assign(P, end), fail)).
call_pred4(Next, A, B, C, D) :-
	PN =.. [Next, A, B, C, D],
	call(PN).
llist_nil(LL) :-
	(LL = [] -> true; LL = gen(A, B, C, D), \+(llist_hd_tl(gen(A, B, C, D), _, _))).
llist_hd2_tl(LL1, H1, H2, LL3) :-
	llist_hd_tl(LL1, H1, LL2),
	llist_hd_tl(LL2, H2, LL3).
llist_single(LL, H) :-
	llist_hd_tl(LL, H, T),
	llist_nil(T).
llist_pos(LL, R) :-
	(LL = gen(_, _, I, _) -> R = some(I); R = none).
llist_alloc(Next, X, gen(Next, Id, 0, X)) :-
	format_to_atom(Id, 'llist_~w_~w', [Next, X]),
	g_assign(Id, g_array_auto(1, ice)).
